var searchIndex = new Map(JSON.parse('[\
["nenya",{"doc":"","t":"FNNNNNNNNNCNNNNNNNNNFNNNNNNNNNNNN","n":["RateLimiter","accepted_request_rate","borrow","borrow_mut","external_accepted_request_rate","external_request_rate","fmt","from","into","new","pid_controller","request_rate","set_external_accepted_request_rate","set_external_request_rate","setpoint","should_throttle","target_rate","try_from","try_into","type_id","PIDController","accumulated_error","borrow","borrow_mut","compute_correction","fmt","from","into","new","setpoint","try_from","try_into","type_id"],"q":[[0,"nenya"],[20,"nenya::pid_controller"],[33,"core::fmt"],[34,"core::fmt"],[35,"core::convert"],[36,"core::result"],[37,"core::any"],[38,"num_traits::sign"],[39,"core::cmp"],[40,"core::marker"],[41,"core::fmt"]],"d":["","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,5,5,5,5,5,5,5,5,5,5,5,5],"f":"`{bd}{ce{}{}}011{{bf}h}{cc{}}2{{ddd{j{d}}l}b}`4{{bc}n{{A`{d}}}}05{bAb}6{c{{Ad{e}}}{}{}}0{cAf{}}`{{{j{c}}}c{AhAjAl}}88{{{j{c}}e}c{AhAjAl}{{A`{c}}}}{{{j{c}}f}hAn}8:{{ccccccc}{{j{c}}}{AhAjAl}}3554","c":[],"p":[[5,"RateLimiter",0],[1,"f64"],[5,"Formatter",33],[8,"Result",33],[5,"PIDController",20],[5,"Duration",34],[1,"unit"],[10,"Into",35],[1,"bool"],[6,"Result",36],[5,"TypeId",37],[10,"Signed",38],[10,"PartialOrd",39],[10,"Copy",40],[10,"Debug",33]],"b":[]}],\
["nenya_sentinel",{"doc":"","t":"IIFOONNNNNNNNHOOOOCNNNNNFFFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOCCOONNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNONNNNNNNNNNNNNNKFFNONNNNNNNNNNMNNNNNNNONNNNNNONONNNNOMNNNNNNNNNNN","n":["LockedMetricMap","MetricMap","SentinelService","alloc","base","borrow","borrow_mut","default","exchange_metrics","fmt","from","into","into_request","main","node_metrics","phantom","ptr","segments","sentinel","should_throttle","try_from","try_into","type_id","vzip","MetricData","Metrics","ShouldThrottleRequest","ShouldThrottleResponse","accepted_request_rate","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into_request","into_request","into_request","into_request","request_rate","segment","segment","segments","sentinel_client","sentinel_server","should_throttle","source","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","SentinelClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","exchange_metrics","fmt","from","from_ref","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","should_throttle","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Sentinel","SentinelServer","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","exchange_metrics","fmt","fmt","from","from","from_arc","from_ref","from_ref","inner","into","into","into_make_service","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","should_throttle","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor"],"q":[[0,"nenya_sentinel"],[24,"nenya_sentinel::sentinel"],[109,"nenya_sentinel::sentinel::sentinel_client"],[135,"nenya_sentinel::sentinel::sentinel_server"],[185,"tonic::request"],[186,"core::future::future"],[187,"alloc::boxed"],[188,"core::pin"],[189,"core::fmt"],[190,"core::fmt"],[191,"core::result"],[192,"core::any"],[193,"tonic::codec::compression"],[194,"tonic::body"],[195,"tonic::client::service"],[196,"core::clone"],[197,"tonic::transport::channel"],[198,"tonic::transport::error"],[199,"tonic::transport::channel::endpoint"],[200,"core::convert"],[201,"tonic::response"],[202,"tonic::status"],[203,"tonic::request"],[204,"http::request"],[205,"http::response"],[206,"tower_service"],[207,"tonic::service::interceptor"],[208,"http_body"],[209,"core::marker"],[210,"alloc::sync"],[211,"axum::routing::into_make_service"],[212,"core::task::wake"],[213,"core::task::poll"]],"d":["","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns the value of <code>segment</code>, or the default value if …","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","","Generated trait containing gRPC methods that should be …","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","",""],"i":[0,0,0,48,49,1,1,1,1,1,1,1,1,0,1,48,48,1,0,1,1,1,1,1,0,0,0,0,14,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,14,12,12,2,0,0,15,2,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,2,14,12,15,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,39,39,43,39,43,39,39,39,43,39,43,39,40,43,39,43,39,39,43,39,39,43,39,39,43,39,39,39,39,39,39,39,39,39,39,40,43,39,43,39,43,39,43,39,43,39,39],"f":"`````{ce{}{}}0{{}b}{{b{f{d}}}{{l{{j{h}}}}}}{{bn}A`}{cc{}}4{c{{f{e}}}{}{}}{{}{{Af{Ab{j{Ad}}}}}}`````{{b{f{Ah}}}{{l{{j{h}}}}}}{c{{Af{e}}}{}{}}0{cAj{}}9`````99999999{dAb}{AlAb}{AhAb}{AnAb}{dd}{AlAl}{AhAh}{AnAn}{{ce}Ab{}{}}000{{}d}{{}Al}{{}Ah}{{}An}{dB`}{AlB`}{AhB`}{AnB`}{{dd}Bb}{{AlAl}Bb}{{AhAh}Bb}{{AnAn}Bb}{{dn}A`}{{Aln}A`}{{Ahn}A`}{{Ann}A`}{cc{}}0000000{ce{}{}}000{c{{f{e}}}{}{}}000`{AhBd}``````2222{c{{Af{e}}}{}{}}0000000{cAj{}}0004444`{{{Bf{c}}Bh}{{Bf{c}}}{{Bl{Bj}}}}55{{{Bf{c}}}{{Bf{c}}}Bn}{{ce}Ab{}{}}{c{{Af{{Bf{C`}}Cb}}}{{Cf{Cd}}}}{{{Bf{c}}e}{{Af{{Ch{d}}Cj}}}{{Bl{Bj}}}{{Cl{d}}}}{{{Bf{c}}n}A`Cn};;`:9{{{Bf{c}}B`}{{Bf{c}}}{{Bl{Bj}}}}0{c{{Bf{c}}}{{Bl{Bj}}}}7{{{Bf{c}}e}{{Af{{Ch{An}}Cj}}}{{Bl{Bj}}}{{Cl{Ah}}}}=::9={{ce}{{Bf{{D`{ce}}}}}{{Dh{{Db{Bj}}}{{Dd{Df}}}}{Bl{Bj}}}Dj}{{cDl}{{Bf{c}}}{{Bl{Bj}}}}```{{{Dn{c}}Bh}{{Dn{c}}}E`}`{ce{}{}}000{{c{Db{e}}}{}{}{}}{{{Dn{c}}{Db{e}}}gE`{EbEd}{}}{{{Ef{c}}}{{Ef{c}}}E`}{{{Dn{c}}}{{Dn{c}}}E`}>>{{E`{f{d}}}{{l{{j{h}}}}}}{{{Ef{c}}n}A`Cn}{{{Dn{c}}n}A`{CnE`}}{cc{}}0{{{Eh{c}}}{{Dn{c}}}E`}11`99{c{{Ej{e}}}{}{}}{c{{f{e}}}{}{}}0{{{Dn{c}}B`}{{Dn{c}}}E`}`0`{c{{Dn{c}}}E`}{{{Dn{c}}El}{{En{{Af{Abe}}}}}E`{}}{{cEl}{{En{{Af{Ab}}}}}{}}{{{Dn{c}}Bh}{{Dn{c}}}E`}`{{E`{f{Ah}}}{{l{{j{h}}}}}}{ce{}{}}0{c{{Af{e}}}{}{}}000{cAj{}}022{{ce}{{D`{{Dn{c}}e}}}E`Dj}","c":[],"p":[[5,"SentinelService",0],[5,"Metrics",24],[5,"Request",185],[10,"Future",186],[5,"Box",187],[5,"Pin",188],[5,"Formatter",189],[8,"Result",189],[1,"unit"],[10,"Error",190],[6,"Result",191],[5,"ShouldThrottleRequest",24],[5,"TypeId",192],[5,"MetricData",24],[5,"ShouldThrottleResponse",24],[1,"usize"],[1,"bool"],[1,"str"],[5,"SentinelClient",109],[6,"CompressionEncoding",193],[8,"BoxBody",194],[10,"GrpcService",195],[10,"Clone",196],[5,"Channel",197],[5,"Error",198],[5,"Endpoint",199],[10,"TryInto",200],[5,"Response",201],[5,"Status",202],[10,"IntoRequest",185],[10,"Debug",189],[5,"InterceptedService",203],[5,"Request",204],[17,"Response"],[5,"Response",205],[10,"Service",206],[10,"Interceptor",203],[5,"Uri",207],[5,"SentinelServer",135],[10,"Sentinel",135],[10,"Body",208],[10,"Send",209],[5,"_Inner",135],[5,"Arc",210],[5,"IntoMakeService",211],[5,"Context",212],[6,"Poll",213],[8,"LockedMetricMap",0],[8,"MetricMap",0]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
